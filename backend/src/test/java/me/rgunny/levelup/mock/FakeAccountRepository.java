package me.rgunny.levelup.mock;

import me.rgunny.levelup.account.domain.Account;
import me.rgunny.levelup.account.service.port.AccountRepository;

import java.util.*;
import java.util.concurrent.atomic.AtomicLong;

public class FakeAccountRepository implements AccountRepository {

    // unit test 는 싱글 스레드에서 동작하기 때문에 동기화 고려 안해도 됨
    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Account> accountList = Collections.synchronizedList(new ArrayList<>());

    @Override
    public Optional<Account> findById(Long id) {
        return accountList.stream().filter(account -> account.getId().equals(id)).findAny();
    }

    /**
     * JpaRepository save() fake 구현
     * TODO: create 와 update 구분하여 분리
     */
    @Override
    public Account save(Account account) {
        if (account.getId() == null || account.getId() == 0) {
            Account fakeAccount = extractedFakeAccountBuilder(account);
            accountList.add(fakeAccount);
            return fakeAccount;
        } else {
            accountList.removeIf(item -> Objects.equals(item.getId(), account.getId()));
            accountList.add(account);
            return account;
        }
    }

    private Account extractedFakeAccountBuilder(Account account) {
        return Account.builder()
                .id(autoGeneratedId.incrementAndGet())
                .password(account.getPassword())
                .name(account.getName())
                .balance(account.getBalance())
                .build();
    }
}
